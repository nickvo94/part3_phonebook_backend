{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","serviceWorker.js","index.js"],"names":["Filter","handleSearch","type","placeholder","onChange","PersonForm","formComponents","inputStyle","marginLeft","onSubmit","addName","value","newName","style","handleNameChange","newNumber","handleNumberChange","Persons","contacts","handleDelete","map","contact","key","name","number","id","onClick","Notification","message","console","log","className","class","text","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","notification","setNotification","useEffect","fetchAll","length","personService","allPersons","handleNotification","setTimeout","event","preventDefault","existedPerson","find","p","includes","personObj","undefined","window","confirm","updatedPerson","catch","error","addedPerson","concat","target","contactToShow","filter","toLowerCase","margin","confirmed","nameObj","deletedPerson","removed","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64e1e8f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({handleSearch}) => {\r\n  return (\r\n    <div>\r\n      Filter with name: <input type=\"text\" placeholder=\"Search..\" onChange={handleSearch} />\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({formComponents}) => {\r\n  const inputStyle = {marginLeft: '10px'}\r\n  return (\r\n    <form onSubmit={formComponents.addName}>\r\n        <div>\r\n          name: \r\n            <input value={formComponents.newName} style={inputStyle}\r\n                  onChange={formComponents.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: \r\n          <input value={formComponents.newNumber} style={inputStyle}\r\n                onChange={formComponents.handleNumberChange} />\r\n        </div>\r\n        <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({contacts, handleDelete}) => {\r\n  \r\n  return(\r\n    <ul>\r\n        {contacts.map(contact => \r\n            <div key={contact.name}>\r\n                {contact.name + ' '} \r\n                {contact.number + ' '}\r\n                <button id={contact.id} onClick={handleDelete} >delete</button>\r\n            </div>)\r\n        }\r\n    </ul>\r\n  ) \r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    console.log('message...' , message)\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={message.class}>\r\n        {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  /* const nonExisted = {\r\n    name: \"Timo\",\r\n    number: \"0467-098-02628\",\r\n    id: 1000\r\n  } */\r\n  return request\r\n            .then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request\r\n          .then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request\r\n          .then(response => response.data)\r\n}\r\n\r\nconst deleteId = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request\r\n            .then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, deleteId}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    fetchAll()\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const fetchAll = () => {\n    personService\n      .getAll()\n        .then(allPersons => {\n          setPersons(allPersons)\n        })\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    if (newName) {\n      const existedPerson = persons.find(p => p.name.includes(newName) ? p : '')\n      console.log('existed', existedPerson)\n\n      const personObj = {\n        name: newName,\n        number: newNumber\n      }\n\n      if (existedPerson !== undefined) {\n        const confirmed = \n          window.confirm(\n            `${newName} is already added to phonebook. Do you want to replace the phone number ?`\n          )\n        if (confirmed) {\n          personService\n            .update(existedPerson.id, personObj)\n              .then(updatedPerson => {\n                setPersons(persons.map(p => p.id === existedPerson.id ? updatedPerson : p))\n              })\n                .catch(error => {\n                  handleNotification({class: 'error', text: `${error.response.data.error}`})   \n                })\n        }\n      }\n      else {\n        personService\n          .create(personObj)\n            .then(addedPerson => {\n              console.log(addedPerson)\n              setPersons(persons.concat(addedPerson))\n              handleNotification({class: 'success', text: `Added ${addedPerson.name} `})\n            })\n            .catch(error => {\n              console.log('error', error.response.data)\n              handleNotification({class: 'error', text: `${error.response.data.error}`})   \n            })   \n      }\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const deleteName = (event) => {\n    console.log(event.target.id)\n    const id = event.target.id\n    const nameObj = persons.find(p => p.id === id)\n    console.log(persons, nameObj)\n\n    let confirmed\n\n    if (nameObj) {\n      confirmed = window.confirm(`Delete ${nameObj.name} ?`)\n    }\n\n    if(confirmed){\n      personService\n        .deleteId(id)\n          .then(deletedPerson => {\n            console.log(deletedPerson)\n            if (deletedPerson) {\n              const removed = persons.filter(p => p.id !== id)\n              setPersons(removed)\n            }\n          })\n            .catch(error => {\n              console.log('error', error.response.data)\n              handleNotification({class: 'error', text: `${error.response.data.error}`})   \n            })\n    }\n  }\n\n  const handleNotification = (message) => {\n    if (message) {\n      console.log('handle notification...' , message)\n      if (message.class === 'error') {\n        setNotification(message)\n        fetchAll()\n      }\n      else if (message.class === 'success') {\n        setNotification(message)\n      }\n\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    console.log('name...', event.target.value)\n    setNewName(event.target.value) \n  }\n\n  const handleNumberChange = (event) => {\n    console.log('number...',event.target.value)\n    setNewNumber(event.target.value) \n  }\n\n  const handleSearch = (event) => {\n    console.log('search...',event.target.value)\n    setNewSearch(event.target.value) \n  }\n\n  const formComponents = {\n    addName: addName,\n    handleNameChange: handleNameChange,\n    handleNumberChange: handleNumberChange,\n    newName: newName,\n    newNumber: newNumber\n  }\n\n  const contactToShow = newSearch.length > 0 \n    ? persons.filter(p => p.name.toLowerCase().includes(newSearch.toLowerCase())) \n    : persons \n\n  return (\n    <div style={{margin: '10px'}}>\n      <h1>Phonebook</h1>\n      <Notification message={notification} />\n      <Filter handleSearch={handleSearch}/>\n      <h2>Add a new contact</h2>\n      <PersonForm formComponents={formComponents}/>\n      <h2>Numbers</h2>\n      <Persons contacts={contactToShow} handleDelete={deleteName}/>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}